/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Inventory;

import Authentication.LoginFrame;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author britt
 */
public class InventoryFrame extends javax.swing.JFrame {

    Inventory inventory;

    /**
     * Creates new form InventoryFrame
     */
    public InventoryFrame() {
        inventory = new Inventory();
        initComponents();
        updateProductsTable(inventory.getProducts());
        updateCategoryTable();
        updateSizeTable();
        updateBrandTable();
        updateVariantsTable();
        checkLowStockNotifications();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        variantTable = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        sizeField = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        colourField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        priceField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        minQuantityField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        quantityField = new javax.swing.JTextField();
        addVariantBtn = new javax.swing.JButton();
        editVariantBtn = new javax.swing.JButton();
        deleteVariantBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        productSearchField = new javax.swing.JTextField();
        productSearchBtn1 = new javax.swing.JButton();
        viewAllProducts = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        variantSearchField = new javax.swing.JTextField();
        productSearchBtn2 = new javax.swing.JButton();
        viewAllVariants = new javax.swing.JButton();
        viewLowStock = new javax.swing.JButton();
        productIDField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        LowStockProductCount = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        categoryField = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        brandField = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        genderField = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        descField = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        addProdBtn = new javax.swing.JButton();
        editProdBtn = new javax.swing.JButton();
        deleteProBtn = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        catNameField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        categoryTable = new javax.swing.JTable();
        jLabel34 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        addCatBtn = new javax.swing.JButton();
        editCatBtn = new javax.swing.JButton();
        deleteCatBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        brandNameField = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        brandTable = new javax.swing.JTable();
        jLabel37 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        addBrandBtn = new javax.swing.JButton();
        editBrandBtn = new javax.swing.JButton();
        deleteBrandBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        sizeNameField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        sizeTable = new javax.swing.JTable();
        jLabel36 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        deleteSizeBtn = new javax.swing.JButton();
        editSizeBtn = new javax.swing.JButton();
        addSizeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1770, 950));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setText("Inventory");

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(187, 67));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Sales Amigo");

        jLabel33.setIcon(new javax.swing.ImageIcon("/Users/richellewilliams/Desktop/uni/SWEN3920/Code/salesamigo/user interface/src/main/java/Icons/salesamigo_logo.png")); // NOI18N

        jButton5.setBackground(new java.awt.Color(51, 102, 255));
        jButton5.setFont(new java.awt.Font("Helvetica Neue", 1, 19)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Logout");
        jButton5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setOpaque(true);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel33)
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1770, 950));

        jPanel8.setPreferredSize(new java.awt.Dimension(2000, 1000));

        variantTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Variant ID #", "Prouduct ID #", "Name", "Size", "Colour", "Price", "Quantity", "Min. Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        variantTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                variantTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(variantTable);

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel4.setText("Size");

        sizeField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        sizeField.setSelectedIndex(-1);
        sizeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel2.setText("Colour");

        jLabel20.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel20.setText("Price");

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel7.setText("Minimum Quantity");

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel8.setText("Quantity");

        quantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(minQuantityField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(priceField1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(colourField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sizeField, 0, 174, Short.MAX_VALUE)
                    .addComponent(quantityField))
                .addGap(30, 30, 30))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(colourField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        addVariantBtn.setBackground(new java.awt.Color(51, 102, 255));
        addVariantBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        addVariantBtn.setForeground(new java.awt.Color(255, 255, 255));
        addVariantBtn.setText("Add");
        addVariantBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addVariantBtn.setOpaque(true);
        addVariantBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        addVariantBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVariantBtnActionPerformed(evt);
            }
        });

        editVariantBtn.setBackground(new java.awt.Color(255, 153, 0));
        editVariantBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        editVariantBtn.setForeground(new java.awt.Color(255, 255, 255));
        editVariantBtn.setText("Edit");
        editVariantBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editVariantBtn.setOpaque(true);
        editVariantBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        editVariantBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editVariantBtnActionPerformed(evt);
            }
        });

        deleteVariantBtn.setBackground(new java.awt.Color(204, 0, 0));
        deleteVariantBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        deleteVariantBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteVariantBtn.setText("Delete");
        deleteVariantBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteVariantBtn.setOpaque(true);
        deleteVariantBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        deleteVariantBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteVariantBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addVariantBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editVariantBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteVariantBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(addVariantBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(editVariantBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(deleteVariantBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID #", "Name", "Category", "Brand", "Price", "Description", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(productTable);

        productSearchField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        productSearchField.setText("Enter product name to search");
        productSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productSearchFieldActionPerformed(evt);
            }
        });

        productSearchBtn1.setBackground(new java.awt.Color(51, 102, 255));
        productSearchBtn1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        productSearchBtn1.setForeground(new java.awt.Color(255, 255, 255));
        productSearchBtn1.setText("Search");
        productSearchBtn1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        productSearchBtn1.setOpaque(true);
        productSearchBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productSearchBtn1ActionPerformed(evt);
            }
        });

        viewAllProducts.setBackground(new java.awt.Color(51, 102, 255));
        viewAllProducts.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        viewAllProducts.setForeground(new java.awt.Color(255, 255, 255));
        viewAllProducts.setText("View All");
        viewAllProducts.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewAllProducts.setOpaque(true);
        viewAllProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllProductsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(productSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(productSearchBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(viewAllProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productSearchBtn1)
                    .addComponent(viewAllProducts))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        variantSearchField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        variantSearchField.setText("Enter product name to search");
        variantSearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variantSearchFieldActionPerformed(evt);
            }
        });

        productSearchBtn2.setBackground(new java.awt.Color(51, 102, 255));
        productSearchBtn2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        productSearchBtn2.setForeground(new java.awt.Color(255, 255, 255));
        productSearchBtn2.setText("Search");
        productSearchBtn2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        productSearchBtn2.setOpaque(true);

        viewAllVariants.setBackground(new java.awt.Color(51, 102, 255));
        viewAllVariants.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        viewAllVariants.setForeground(new java.awt.Color(255, 255, 255));
        viewAllVariants.setText("View All");
        viewAllVariants.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewAllVariants.setOpaque(true);
        viewAllVariants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllVariantsActionPerformed(evt);
            }
        });

        viewLowStock.setBackground(new java.awt.Color(51, 102, 255));
        viewLowStock.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        viewLowStock.setForeground(new java.awt.Color(255, 255, 255));
        viewLowStock.setText("View Low Stock Products");
        viewLowStock.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewLowStock.setOpaque(true);
        viewLowStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewLowStockActionPerformed(evt);
            }
        });

        productIDField.setBackground(new java.awt.Color(51, 102, 255));
        productIDField.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        productIDField.setForeground(new java.awt.Color(255, 255, 255));
        productIDField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        productIDField.setText("Product ID");
        productIDField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        productIDField.setOpaque(true);
        productIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIDFieldActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 0, 51));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setIcon(new javax.swing.ImageIcon("/Users/richellewilliams/Desktop/uni/SWEN3920/Code/salesamigo/user interface/src/main/java/Icons/notification-bell.png")); // NOI18N
        jLabel11.setLabelFor(viewLowStock);
        jLabel11.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        LowStockProductCount.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        LowStockProductCount.setForeground(new java.awt.Color(204, 0, 51));
        LowStockProductCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LowStockProductCount.setLabelFor(viewLowStock);
        LowStockProductCount.setText("22");
        LowStockProductCount.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(variantSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(productSearchBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(viewAllVariants, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(viewLowStock, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(productIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LowStockProductCount)
                .addGap(126, 126, 126))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(LowStockProductCount)
                .addGap(0, 0, 0)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(variantSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(viewLowStock)
                            .addComponent(viewAllVariants)
                            .addComponent(productSearchBtn2)
                            .addComponent(jLabel11))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(productIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
        );

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel13.setText("Category");

        categoryField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        categoryField.setSelectedIndex(-1);
        categoryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryFieldActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel14.setText("Brand");

        brandField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        brandField.setSelectedIndex(-1);

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel16.setText("Price");

        jLabel19.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel19.setText("Gender");

        genderField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Unisex" }));
        genderField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderFieldActionPerformed(evt);
            }
        });

        descField.setColumns(20);
        descField.setRows(5);
        jScrollPane6.setViewportView(descField);

        jLabel17.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel17.setText("Description");

        addProdBtn.setBackground(new java.awt.Color(51, 102, 255));
        addProdBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        addProdBtn.setForeground(new java.awt.Color(255, 255, 255));
        addProdBtn.setText("Add");
        addProdBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addProdBtn.setOpaque(true);
        addProdBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        addProdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProdBtnActionPerformed(evt);
            }
        });

        editProdBtn.setBackground(new java.awt.Color(255, 153, 0));
        editProdBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        editProdBtn.setForeground(new java.awt.Color(255, 255, 255));
        editProdBtn.setText("Edit");
        editProdBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editProdBtn.setOpaque(true);
        editProdBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        editProdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProdBtnActionPerformed(evt);
            }
        });

        deleteProBtn.setBackground(new java.awt.Color(204, 0, 51));
        deleteProBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        deleteProBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteProBtn.setText("Delete");
        deleteProBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteProBtn.setOpaque(true);
        deleteProBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        deleteProBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(categoryField, javax.swing.GroupLayout.Alignment.LEADING, 0, 217, Short.MAX_VALUE)
                            .addComponent(brandField, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priceField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(genderField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameField)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addProdBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editProdBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteProBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(brandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(addProdBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(editProdBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(deleteProBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(genderField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jLabel21.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        jLabel21.setText("Copyright © 2024 Sales Amigo");

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel6.setText("Product");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(572, 572, 572)
                        .addComponent(jLabel21))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6)))
                            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 673, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel6)
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("Product", jPanel8);

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel12.setText("Enter Category:");

        catNameField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        catNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catNameFieldActionPerformed(evt);
            }
        });

        categoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        categoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(categoryTable);
        if (categoryTable.getColumnModel().getColumnCount() > 0) {
            categoryTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel34.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        jLabel34.setText("Copyright © 2024 Sales Amigo");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel9.setText("Category");

        addCatBtn.setBackground(new java.awt.Color(51, 102, 255));
        addCatBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        addCatBtn.setForeground(new java.awt.Color(255, 255, 255));
        addCatBtn.setText("Add");
        addCatBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addCatBtn.setOpaque(true);
        addCatBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        addCatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCatBtnActionPerformed(evt);
            }
        });

        editCatBtn.setBackground(new java.awt.Color(255, 153, 0));
        editCatBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        editCatBtn.setForeground(new java.awt.Color(255, 255, 255));
        editCatBtn.setText("Edit");
        editCatBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editCatBtn.setOpaque(true);
        editCatBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        editCatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCatBtnActionPerformed(evt);
            }
        });

        deleteCatBtn.setBackground(new java.awt.Color(204, 0, 0));
        deleteCatBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        deleteCatBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteCatBtn.setText("Delete");
        deleteCatBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteCatBtn.setOpaque(true);
        deleteCatBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        deleteCatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCatBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(addCatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(editCatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(deleteCatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteCatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editCatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(572, 572, 572)
                        .addComponent(jLabel34))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(catNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(136, 136, 136)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(catNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(401, 401, 401)
                        .addComponent(jLabel34))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Category", jPanel4);

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel18.setText("Enter Brand:");

        brandNameField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        brandNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandNameFieldActionPerformed(evt);
            }
        });

        brandTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        brandTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                brandTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(brandTable);
        if (brandTable.getColumnModel().getColumnCount() > 0) {
            brandTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel37.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        jLabel37.setText("Copyright © 2024 Sales Amigo");

        jLabel35.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel35.setText("Brand");

        addBrandBtn.setBackground(new java.awt.Color(51, 102, 255));
        addBrandBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        addBrandBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBrandBtn.setText("Add");
        addBrandBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBrandBtn.setOpaque(true);
        addBrandBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        addBrandBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBrandBtnActionPerformed(evt);
            }
        });

        editBrandBtn.setBackground(new java.awt.Color(255, 153, 0));
        editBrandBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        editBrandBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBrandBtn.setText("Edit");
        editBrandBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editBrandBtn.setOpaque(true);
        editBrandBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        editBrandBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBrandBtnActionPerformed(evt);
            }
        });

        deleteBrandBtn.setBackground(new java.awt.Color(204, 0, 0));
        deleteBrandBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        deleteBrandBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBrandBtn.setText("Delete");
        deleteBrandBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteBrandBtn.setOpaque(true);
        deleteBrandBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        deleteBrandBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBrandBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(addBrandBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(editBrandBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(deleteBrandBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 48, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBrandBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editBrandBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBrandBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel35))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(brandNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(136, 136, 136)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(572, 572, 572)
                        .addComponent(jLabel37)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel35)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(brandNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(401, 401, 401)
                        .addComponent(jLabel37))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Brand", jPanel6);

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel15.setText("Enter Size:");

        sizeNameField.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        sizeNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeNameFieldActionPerformed(evt);
            }
        });

        sizeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sizeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sizeTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(sizeTable);
        if (sizeTable.getColumnModel().getColumnCount() > 0) {
            sizeTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel36.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        jLabel36.setText("Copyright © 2024 Sales Amigo");

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel10.setText("Size");

        deleteSizeBtn.setBackground(new java.awt.Color(204, 0, 0));
        deleteSizeBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        deleteSizeBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteSizeBtn.setText("Delete");
        deleteSizeBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteSizeBtn.setOpaque(true);
        deleteSizeBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        deleteSizeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSizeBtnActionPerformed(evt);
            }
        });

        editSizeBtn.setBackground(new java.awt.Color(255, 153, 0));
        editSizeBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        editSizeBtn.setForeground(new java.awt.Color(255, 255, 255));
        editSizeBtn.setText("Edit");
        editSizeBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editSizeBtn.setOpaque(true);
        editSizeBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        editSizeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSizeBtnActionPerformed(evt);
            }
        });

        addSizeBtn.setBackground(new java.awt.Color(51, 102, 255));
        addSizeBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        addSizeBtn.setForeground(new java.awt.Color(255, 255, 255));
        addSizeBtn.setText("Add");
        addSizeBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addSizeBtn.setOpaque(true);
        addSizeBtn.setPreferredSize(new java.awt.Dimension(72, 24));
        addSizeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSizeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(addSizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(editSizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(deleteSizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editSizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteSizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(sizeNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(136, 136, 136)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(572, 572, 572)
                        .addComponent(jLabel36)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(sizeNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(401, 401, 401)
                        .addComponent(jLabel36))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(753, 753, 753))
        );

        jTabbedPane1.addTab("Size", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1425, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(634, 634, 634)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1362, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 741, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void updateProductsTable(ArrayList<Product> products) {
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        model.setRowCount(0);

        try {
            for (Product product : products) {
                Object[] rowData = {
                    product.getID(),
                    product.getName(),
                    product.getCategory(),
                    product.getBrand(),
                    product.getPrice(),
                    product.getDescription(),
                    product.getGender()
                };
                //System.out.println(product.getName());
                model.addRow(rowData);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void updateVariantsTable() {
        DefaultTableModel model = (DefaultTableModel) variantTable.getModel();
        model.setRowCount(0);

        try {
            for (Product product : inventory.getProducts()) {
                for (ProductVariant variant : product.getVariants()) {
                    Object[] rowData = {
                        variant.getVariantID(),
                        product.getID(),
                        product.getName(),
                        variant.getSize(),
                        variant.getColour(),
                        variant.getPrice(),
                        variant.getQuantity(),
                        variant.getMinQuantity()
                    };
                    //System.out.println(product.getName());
                    model.addRow(rowData);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void updateVariantsTable(Integer productId) {
        DefaultTableModel model = (DefaultTableModel) variantTable.getModel();
        model.setRowCount(0);

        try {
            for (Product product : inventory.getProducts()) {
                if (productId == null || product.getID() == productId) {
                    for (ProductVariant variant : product.getVariants()) {
                        Object[] rowData = {
                            variant.getVariantID(),
                            product.getID(),
                            product.getName(),
                            variant.getSize(),
                            variant.getColour(),
                            variant.getPrice(),
                            variant.getQuantity(),
                            variant.getMinQuantity()
                        };
                        model.addRow(rowData);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void updateCategoryTable() {
        DefaultTableModel model = (DefaultTableModel) categoryTable.getModel();
        model.setRowCount(0);
        try {
            ArrayList<Category> categories = inventory.getCategories();
            for (Category category : categories) {
                Object[] rowData = {
                    category.getId(),
                    category.getName()};
                model.addRow(rowData);
            }
            loadCatDropDown();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void loadCatDropDown() {
        ArrayList<Category> categories = inventory.getCategories();
        ArrayList<String> names = new ArrayList<String>();
        for (Category category : categories) {
            names.add(category.getName());
        }
        categoryField.setModel(new javax.swing.DefaultComboBoxModel<>(names.toArray(new String[0])));
    }

    private void updateBrandTable() {
        DefaultTableModel model = (DefaultTableModel) brandTable.getModel();
        model.setRowCount(0);
        try {
            ArrayList<Brand> brands = inventory.getBrands();
            for (Brand brand : brands) {
                Object[] rowData = {
                    brand.getId(),
                    brand.getName()};
                model.addRow(rowData);
            }
            loadBrandDropDown();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void loadBrandDropDown() {
        ArrayList<Brand> brands = inventory.getBrands();
        ArrayList<String> names = new ArrayList<String>();
        for (Brand brand : brands) {
            names.add(brand.getName());
        }
        brandField.setModel(new javax.swing.DefaultComboBoxModel<>(names.toArray(new String[0])));
    }

    private void updateSizeTable() {
        DefaultTableModel model = (DefaultTableModel) sizeTable.getModel();
        model.setRowCount(0);
        try {
            ArrayList<Size> sizes = inventory.getSizes();
            for (Size size : sizes) {
                Object[] rowData = {
                    size.getId(),
                    size.getName()};
                model.addRow(rowData);
            }
            loadSizeDropDown();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void loadSizeDropDown() {
        ArrayList<Size> sizes = inventory.getSizes();
        ArrayList<String> names = new ArrayList<String>();
        for (Size size : sizes) {
            names.add(size.getName());
        }
        sizeField.setModel(new javax.swing.DefaultComboBoxModel<>(names.toArray(new String[0])));
    }

    private void checkLowStockNotifications() {
        int count = 0;
        for (ProductVariant productVariant : inventory.getVariants()) {
            if (productVariant.isLowStock()) {
                count++;
            }
        }
        if (count > 0) {
            JOptionPane.showMessageDialog(null, "Low stock alert: " + count + " item(s) are running low on stock.",
                    "Low Stock Alert", JOptionPane.WARNING_MESSAGE);
        }
    }
    private void brandTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_brandTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) brandTable.getModel();
        int selectedRowIndex = brandTable.getSelectedRow();
        String name = (String) model.getValueAt(selectedRowIndex, 1);
        brandNameField.setText(name);
    }//GEN-LAST:event_brandTableMouseClicked

    private void deleteBrandBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBrandBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) brandTable.getModel();
        int selectedRow = brandTable.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) model.getValueAt(selectedRow, 0);
            String name = brandNameField.getText();
            String message = String.format("Brand Deletion:\nName: %s\n", name);
            int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to delete this brand with ID " + id + " ?", "Delete Brand", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                String feedback = inventory.deleteBrand(id);
                updateBrandTable();
                // Show details in another JOptionPane

                if (feedback.contains("success")) {
                    JOptionPane.showMessageDialog(this, feedback, "Brand deleted", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, feedback, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a brand to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteBrandBtnActionPerformed

    private void brandNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandNameFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_brandNameFieldActionPerformed

    private void editBrandBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBrandBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) brandTable.getModel();
        int selectedRow = brandTable.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) model.getValueAt(selectedRow, 0);
            String name = brandNameField.getText();
            String message = String.format("Brand Update:\nName: %s\n", name);
            int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to update this brand with ID " + id + " ?", "Update Brand", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                String feedback = inventory.updateBrand(id, name);
                updateBrandTable();
                // Show details in another JOptionPane

                if (feedback.contains("success")) {
                    JOptionPane.showMessageDialog(this, feedback, "Brand updated", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, feedback, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            //inventory.updateCategory(catId, catName);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a brand to update.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editBrandBtnActionPerformed

    private void addBrandBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBrandBtnActionPerformed
        // TODO add your handling code here:
        String name = brandNameField.getText();

        String message = String.format("New Brand:\nName: %s\n", name);
        int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want add to this brand?", "Add New Brand", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            String feedback = inventory.createBrand(name);
            updateBrandTable();
            // Show details in another JOptionPane
            if (feedback.contains("success")) {
                JOptionPane.showMessageDialog(this, feedback, "Brand Added", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, feedback, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addBrandBtnActionPerformed

    private void sizeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sizeTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) sizeTable.getModel();
        int selectedRowIndex = sizeTable.getSelectedRow();
        String name = (String) model.getValueAt(selectedRowIndex, 1);
        sizeNameField.setText(name);

    }//GEN-LAST:event_sizeTableMouseClicked

    private void sizeNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeNameFieldActionPerformed

    private void deleteSizeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSizeBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) sizeTable.getModel();
        int selectedRow = sizeTable.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) model.getValueAt(selectedRow, 0);
            String name = sizeNameField.getText();
            String message = String.format("Size Deletion:\nName: %s\n", name);
            int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to delete this size with ID " + id + " ?", "Delete Size", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                String feedback = inventory.deleteSize(id);
                updateSizeTable();
                // Show details in another JOptionPane
                if (feedback.contains("success")) {
                    JOptionPane.showMessageDialog(this, feedback, "Size deleted", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, feedback, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a size to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        updateCategoryTable();
    }//GEN-LAST:event_deleteSizeBtnActionPerformed

    private void editSizeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSizeBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) sizeTable.getModel();
        int selectedRow = sizeTable.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) model.getValueAt(selectedRow, 0);
            String name = sizeNameField.getText();
            String message = String.format("Size Update:\nName: %s\n", name);
            int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to update this size with ID " + id + " ?", "Update Size", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                String feedback = inventory.updateSize(id, name);
                updateSizeTable();
                // Show details in another JOptionPane
                if (feedback.contains("success")) {
                    JOptionPane.showMessageDialog(this, feedback, "Size updated", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, feedback, "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a size to update.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_editSizeBtnActionPerformed

    private void addSizeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSizeBtnActionPerformed
        // TODO add your handling code here:
        String name = sizeNameField.getText();

        String message = String.format("New Size:\nName: %s\n", name);
        int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want add to this size?", "Add New Size", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            String feedback = inventory.createSize(name);
            updateSizeTable();
            // Show details in another JOptionPane
            if (feedback.contains("success")) {
                JOptionPane.showMessageDialog(this, feedback, "Size Added", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, feedback, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addSizeBtnActionPerformed

    private void categoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) categoryTable.getModel();
        int selectedRowIndex = categoryTable.getSelectedRow();
        String name = (String) model.getValueAt(selectedRowIndex, 1);
        catNameField.setText(name);
    }//GEN-LAST:event_categoryTableMouseClicked

    private void deleteCatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCatBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) categoryTable.getModel();
        int selectedRow = categoryTable.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) model.getValueAt(selectedRow, 0);
            String name = catNameField.getText();
            String message = String.format("Category Deletion:\nName: %s\n", name);
            int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to delete this category with ID " + id + " ?", "Delete Category", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                String feedback = inventory.deleteCategory(id);
                updateCategoryTable();
                // Show details in another JOptionPane
                if (feedback.contains("success")) {
                    JOptionPane.showMessageDialog(this, feedback, "Category deleted", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, feedback, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a category to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteCatBtnActionPerformed

    private void editCatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCatBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) categoryTable.getModel();
        int selectedRow = categoryTable.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) model.getValueAt(selectedRow, 0);
            String name = catNameField.getText();
            String message = String.format("Category Update:\nName: %s\n", name);
            int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to update this category with ID " + id + " ?", "Update Category", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                String feedback = inventory.updateCategory(id, name);
                updateCategoryTable();
                // Show details in another JOptionPane
                if (feedback.contains("success")) {
                    JOptionPane.showMessageDialog(this, feedback, "Category updated", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, feedback, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            //inventory.updateCategory(catId, catName);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a category to update.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editCatBtnActionPerformed

    private void addCatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCatBtnActionPerformed
        // TODO add your handling code here:
        String name = catNameField.getText();

        String message = String.format("Category Update:\nName: %s\n", name);
        int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want add to this category?", "Add New Category", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            String feedback = inventory.createCategory(name);
            updateCategoryTable();
            // Show details in another JOptionPane
            System.out.println(feedback);
            if (feedback.contains("success")) {
                JOptionPane.showMessageDialog(this, feedback, "Category Added", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, feedback, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addCatBtnActionPerformed

    private void catNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catNameFieldActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        int selectedRowIndex = productTable.getSelectedRow();

        int id = (int) model.getValueAt(selectedRowIndex, 0);
        String name = (String) model.getValueAt(selectedRowIndex, 1);
        String category = (String) model.getValueAt(selectedRowIndex, 2);
        String brand = (String) model.getValueAt(selectedRowIndex, 3);
        double price = (double) model.getValueAt(selectedRowIndex, 4);
        String description = (String) model.getValueAt(selectedRowIndex, 5);
        String gender = (String) model.getValueAt(selectedRowIndex, 6);

        productIDField.setText(String.valueOf(id));
        nameField.setText(name);
        priceField.setText(String.valueOf(price));
        descField.setText(description);
        categoryField.setSelectedItem(category);
        brandField.setSelectedItem(brand);
        genderField.setSelectedItem(gender);

        updateVariantsTable(id);
    }//GEN-LAST:event_productTableMouseClicked

    private void variantTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_variantTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) variantTable.getModel();
        int selectedRowIndex = variantTable.getSelectedRow();

        String size = (String) model.getValueAt(selectedRowIndex, 3);
        String colour = (String) model.getValueAt(selectedRowIndex, 4);
        double price = (double) model.getValueAt(selectedRowIndex, 5);
        int quantity = (int) model.getValueAt(selectedRowIndex, 6);
        int minQuantity = (int) model.getValueAt(selectedRowIndex, 7);

        sizeField.setSelectedItem(size);
        colourField.setText(colour);
        priceField1.setText(String.valueOf(price));
        quantityField.setText(String.valueOf(quantity));
        minQuantityField.setText(String.valueOf(minQuantity));
    }//GEN-LAST:event_variantTableMouseClicked

    private void addProdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProdBtnActionPerformed
        // TODO add your handling code here:

        //int id = (int) model.getValueAt(selectedRowIndex, 0);
        String name = nameField.getText();
        Double price = Double.valueOf(priceField.getText());
        String description = descField.getText();
        String category = (String) categoryField.getSelectedItem();
        String brand = (String) brandField.getSelectedItem();
        String gender = (String) genderField.getSelectedItem();

        String message = String.format("Product Update:\nName: %s\nPrice: %.2f\nDescription: %s\nCategory: %s \nBrand: %s\nGender: %s",
                name, price, description, category, brand, gender);
        int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to this product?", "Add New Product", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            String feedback = inventory.addProduct(name, description, price, category, brand, gender);
            updateProductsTable(inventory.getProducts());
            // Show details in another JOptionPane
            JOptionPane.showMessageDialog(this, feedback, "Product Added", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addProdBtnActionPerformed

    private void editProdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProdBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        int selectedRowIndex = productTable.getSelectedRow();
        int id = -1;
        if (selectedRowIndex != -1) {
            id = (int) model.getValueAt(selectedRowIndex, 0);
            String name = nameField.getText();
            double price = Double.parseDouble(priceField.getText());
            String description = descField.getText();
            String category = (String) categoryField.getSelectedItem();
            String brand = (String) brandField.getSelectedItem();
            String gender = (String) genderField.getSelectedItem();

            String message = String.format("Product Update:\nName: %s\nPrice: %.2f\nDescription: %s\nCategory: %s \nBrand: %s\nGender: %s",
                    name, price, description, category, brand, gender);
            int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to update product with ID: " + id + "?", "Save Changes", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                String feedback = inventory.updateProduct(id, name, category, price, description, gender, brand);
                updateProductsTable(inventory.getProducts());
                JOptionPane.showMessageDialog(this, feedback, "Product Added", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a product to update.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editProdBtnActionPerformed

    private void categoryFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryFieldActionPerformed

    private void deleteProBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
        int selectedRowIndex = productTable.getSelectedRow();

        int id = -1;
        if (selectedRowIndex != -1) {
            id = (int) model.getValueAt(selectedRowIndex, 0);
            String name = nameField.getText();
            double price = Double.parseDouble(priceField.getText());
            String description = descField.getText();
            String category = (String) categoryField.getSelectedItem();
            String brand = (String) brandField.getSelectedItem();
            String gender = (String) genderField.getSelectedItem();

            String message = String.format("Product Deletion:\nName: %s\nPrice: %.2f\nDescription: %s\nCategory: %s \nBrand: %s\nGender: %s",
                    name, price, description, category, brand, gender);
            int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to delete product with ID: " + id + "?", "Delete Product", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                String feedback = inventory.deleteProduct(id);
                updateProductsTable(inventory.getProducts());
                JOptionPane.showMessageDialog(this, feedback, "Product Deleted", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a product to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteProBtnActionPerformed

    private void editVariantBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editVariantBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) variantTable.getModel();
        int selectedRowIndex = variantTable.getSelectedRow();
        int variant_id = -1;
        if (selectedRowIndex != -1) {
            variant_id = (int) model.getValueAt(selectedRowIndex, 0);
            int productID = (int) model.getValueAt(selectedRowIndex, 1);
            Product product = inventory.findProductByID(productID);
            String size = (String) sizeField.getSelectedItem();
            String colour = colourField.getText();
            int quantity = Integer.parseInt(quantityField.getText());
            Double price = Double.valueOf(priceField1.getText());
            int minQuantity = Integer.parseInt(minQuantityField.getText());

            String message = String.format("Variant Update:\nProduct Name: %s\nSize: %s\nColour: %s\nQuantity: %s\nPrice: %.2f\n\nMin Quantity: %d",
                    product.getName(), size, colour, quantity, price, minQuantity);

            int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to update variant with ID: " + variant_id + "?", "Save Changes", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                String feedback = inventory.updateVariant(variant_id, product, size, colour, quantity, price, minQuantity);
                JOptionPane.showMessageDialog(this, feedback, "Variant Updated", JOptionPane.INFORMATION_MESSAGE);
                updateVariantsTable(productID);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a variant to update.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editVariantBtnActionPerformed

    private void addVariantBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVariantBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) variantTable.getModel();
        int selectedRowIndex = variantTable.getSelectedRow();

        int productID = (int) model.getValueAt(selectedRowIndex, 1);
        Product product = inventory.findProductByID(productID);
        String size = (String) sizeField.getSelectedItem();
        String colour = colourField.getText();
        int quantity = Integer.parseInt(quantityField.getText());
        Double price = Double.valueOf(priceField1.getText());
        int minQuantity = Integer.parseInt(minQuantityField.getText());

        String message = String.format("Variant Addition:\nProduct Name: %s\nSize: %s\nColour: %s\nQuantity: %s\nPrice: %.2f\n\nMin Quantity: %d",
                product.getName(), size, colour, quantity, price, minQuantity);
        int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to add this variant?", "Add New Variant", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            String feedback = inventory.createVariant(product, size, colour, quantity, price, minQuantity);
            // Show details in another JOptionPane
            JOptionPane.showMessageDialog(this, feedback, "Variant Added", JOptionPane.INFORMATION_MESSAGE);
            updateVariantsTable(productID);
        }
    }//GEN-LAST:event_addVariantBtnActionPerformed

    private void deleteVariantBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteVariantBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) variantTable.getModel();
        int selectedRowIndex = variantTable.getSelectedRow();

        int variant_id = -1;
        if (selectedRowIndex != -1) {
            variant_id = (int) model.getValueAt(selectedRowIndex, 0);
            int productID = (int) model.getValueAt(selectedRowIndex, 1);
            Product product = inventory.findProductByID(productID);
            String size = (String) sizeField.getSelectedItem();
            String colour = colourField.getText();
            int quantity = Integer.parseInt(quantityField.getText());
            Double price = Double.valueOf(priceField1.getText());
            int minQuantity = Integer.parseInt(minQuantityField.getText());

            String message = String.format("Variant Deletion:\nProduct Name: %s\nSize: %s\nColour: %s\nQuantity: %s\nPrice: %.2f\n\nMin Quantity: %d",
                    product.getName(), size, colour, quantity, price, minQuantity);

            int option = JOptionPane.showConfirmDialog(this, message + "\nAre you sure you want to delete variant with ID: " + variant_id + "?", "Delete Product", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                String feedback = inventory.deleteVariant(variant_id);
                JOptionPane.showMessageDialog(this, feedback, "Variant Deleted", JOptionPane.INFORMATION_MESSAGE);
                updateVariantsTable(productID);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a vairant to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteVariantBtnActionPerformed

    private void sizeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeFieldActionPerformed

    private void quantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityFieldActionPerformed

    private void productIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productIDFieldActionPerformed

    private void viewLowStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewLowStockActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) variantTable.getModel();
        model.setRowCount(0);

        try {
            for (ProductVariant variant : inventory.getVariants()) {
                if (variant.isLowStock()) {
                    Object[] rowData = {
                        variant.getVariantID(),
                        variant.getProduct().getName(),
                        variant.getSize(),
                        variant.getColour(),
                        variant.getPrice(),
                        variant.getQuantity(),
                        variant.getMinQuantity()
                    };
                    model.addRow(rowData);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_viewLowStockActionPerformed

    private void viewAllVariantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllVariantsActionPerformed
        // TODO add your handling code here:
        updateVariantsTable();
    }//GEN-LAST:event_viewAllVariantsActionPerformed

    private void viewAllProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllProductsActionPerformed
        // TODO add your handling code here:
        updateProductsTable(inventory.getProducts());
    }//GEN-LAST:event_viewAllProductsActionPerformed

    private void productSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productSearchFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_productSearchFieldActionPerformed

    private void productSearchBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productSearchBtn1ActionPerformed
        // TODO add your handling code here:
        String query = productSearchField.getText();
        updateProductsTable(inventory.getProductsByNameOrBrand(query));
    }//GEN-LAST:event_productSearchBtn1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        LoginFrame loginFrame = new LoginFrame();
        loginFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void genderFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderFieldActionPerformed

    private void variantSearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variantSearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_variantSearchFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LowStockProductCount;
    private javax.swing.JButton addBrandBtn;
    private javax.swing.JButton addCatBtn;
    private javax.swing.JButton addProdBtn;
    private javax.swing.JButton addSizeBtn;
    private javax.swing.JButton addVariantBtn;
    private javax.swing.JComboBox<String> brandField;
    private javax.swing.JTextField brandNameField;
    private javax.swing.JTable brandTable;
    private javax.swing.JTextField catNameField;
    private javax.swing.JComboBox<String> categoryField;
    private javax.swing.JTable categoryTable;
    private javax.swing.JTextField colourField;
    private javax.swing.JButton deleteBrandBtn;
    private javax.swing.JButton deleteCatBtn;
    private javax.swing.JButton deleteProBtn;
    private javax.swing.JButton deleteSizeBtn;
    private javax.swing.JButton deleteVariantBtn;
    private javax.swing.JTextArea descField;
    private javax.swing.JButton editBrandBtn;
    private javax.swing.JButton editCatBtn;
    private javax.swing.JButton editProdBtn;
    private javax.swing.JButton editSizeBtn;
    private javax.swing.JButton editVariantBtn;
    private javax.swing.JComboBox<String> genderField;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField minQuantityField;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField priceField;
    private javax.swing.JTextField priceField1;
    private javax.swing.JTextField productIDField;
    private javax.swing.JButton productSearchBtn1;
    private javax.swing.JButton productSearchBtn2;
    private javax.swing.JTextField productSearchField;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField quantityField;
    private javax.swing.JComboBox<String> sizeField;
    private javax.swing.JTextField sizeNameField;
    private javax.swing.JTable sizeTable;
    private javax.swing.JTextField variantSearchField;
    private javax.swing.JTable variantTable;
    private javax.swing.JButton viewAllProducts;
    private javax.swing.JButton viewAllVariants;
    private javax.swing.JButton viewLowStock;
    // End of variables declaration//GEN-END:variables
}
